#include <iostm8S207c8.h>
#include "LCD12232.h"
#include "LCD_FONT.H"




#define  LCD12232DELAY_MUN   2  

static void LCD12232Delay(unsigned char mun)
{
   while(mun--)
   {
      asm("nop");
   }
}

 //******************************************
 //	 调用方式：void OutMI(uchar i)
 //  函数说明：发指令i到主窗口。（内函数，私有，用户不直接调用）
 //*****************************************
static void OutMI(unsigned char dat) 
 {  
     E1=1; 
     LCD12232Delay(LCD12232DELAY_MUN);
     A0=0;
     LCD12232Delay(LCD12232DELAY_MUN);
     PB_DDR = 0xFF;                  //PB Output
     DATA=dat;
     LCD12232Delay(LCD12232DELAY_MUN);
     E1=0; 
     LCD12232Delay(LCD12232DELAY_MUN);
 }
//************************************
//调用方式：void OutMD(uchar i) 
//函数说明：发数据i到主窗口。（内函数，私有，用户不直接调用）
//************************************
static void OutMD(unsigned char dat) 
{ 
     E1=1;
     LCD12232Delay(LCD12232DELAY_MUN);
     A0=1;
     LCD12232Delay(LCD12232DELAY_MUN);
     PB_DDR = 0xFF;                  //PB Output
     DATA=dat;
     LCD12232Delay(LCD12232DELAY_MUN);
     E1=0;
     LCD12232Delay(LCD12232DELAY_MUN);
}
//*************************************
// 调用方式：void OutSI(uchar i) 
//函数说明：发指令i到从窗口。（内函数，私有，用户不直接调用）
//*************************************
static void OutSI(unsigned char dat)
{ 
    A0=0;
    LCD12232Delay(LCD12232DELAY_MUN);
    E2=1;
    LCD12232Delay(LCD12232DELAY_MUN);
    PB_DDR = 0xFF;                  //PB Output
    DATA=dat;
    LCD12232Delay(LCD12232DELAY_MUN);
    E2=0;
    LCD12232Delay(LCD12232DELAY_MUN);
}
//********************************
//调用方式：void OutSD(uchar i) 
//函数说明：发数据i到从窗口。（内函数，私有，用户不直接调用）
//********************************
static void OutSD(unsigned char dat) 
{ 
    A0=1;
    LCD12232Delay(LCD12232DELAY_MUN);
    E2=1;
    LCD12232Delay(LCD12232DELAY_MUN);
    PB_DDR = 0xFF;                  //PB Output
    DATA=dat;
    LCD12232Delay(LCD12232DELAY_MUN);
    E2=0;
    LCD12232Delay(LCD12232DELAY_MUN);
}
/*-------------------------------------------------------------------------------- 
调用方式：void LcdIni(void) 
函数说明：12232点阵液晶初始化，开机后仅调用一次。 
---------------------------------------------------------------------------------*/ 
void LcdIni(void) 
{ 
    PB_DDR = 0xff;
    PB_CR1 = 0xff;
    PB_CR2 = 0x00;
    
    PC_DDR |= 0x3E;
    PC_CR1 |= 0x3E;
    PC_CR2 &= 0xc1;
  
    RES = 1;
    RW = 0;

    OutMI(0XE2); OutSI(0XE2);//复位 
    OutMI(0XAE); OutSI(0XAE);//POWER SAVE
    OutMI(0XA4); OutSI(0XA4);//动态驱动 
    OutMI(0XA9); OutSI(0XA9);//1/32占空比 
    OutMI(0XA0); OutSI(0XA0);//时钟线输出 
    OutMI(0XEE); OutSI(0XEE);//写模式 
    OutMI(0X00); OutMI(0XC0); 
    OutSI(0X00); OutSI(0XC0); 
    OutMI(0XAF); OutSI(0XAF); 
    
    clrscr();
}
/*-------------------------------------------------------------------------------- 
调用方式：void SetPage(uchar page0,uchar page1) 
函数说明：同时设置主从显示页为0－3页。（内函数，私有，用户不直接调用） 
---------------------------------------------------------------------------------*/ 
static void SetPage(unsigned char page0,unsigned char page1) 
{ 
    OutMI(0xB8|page1);
	OutSI(0xB8|page0); 
}
/*-------------------------------------------------------------------------------- 
调用方式：void SetAddress(uchar address0,uchar address1) 
函数说明：同时设置主从列地址为0－121。（内函数，私有，用户不直接调用） 
---------------------------------------------------------------------------------*/ 
static void SetAddress(unsigned char address0,unsigned char address1) 
{ 
    OutMI(address1&0x7F);
	OutSI(address0&0x7F); 
}
/*-------------------------------------------------------------------------------- 
调用方式：void PutChar0(uchar ch) 
函数说明：在左页当前地址画一个字节8个点。（内函数，私有，用户不直接调用） 
---------------------------------------------------------------------------------*/
static void PutChar0(unsigned char ch) 
{
    OutSD(ch); 
}
/*-------------------------------------------------------------------------------- 
调用方式：void PutChar1(uchar ch) 
函数说明：在右页当前地址画一个字节8个点。（内函数，私有，用户不直接调用） 
---------------------------------------------------------------------------------*/ 
static void PutChar1(unsigned char ch) 
{
    OutMD(ch); 
}
/*-------------------------------------------------------------------------------- 
调用方式：void DrawBmp(uchar x,bit layer,uchar width,uchar *bmp) 
函数说明：画一个图，横坐标是x，layer表示上下层，width是图形的宽，高都是16，bmp是 
图形指针 使用zimo21软件，采用纵向取模得到bmp数据。 
---------------------------------------------------------------------------------*/ 
void DrawBmp(unsigned char x0,unsigned char layer,unsigned char width,const unsigned char *bmp) 
{ 
   unsigned char x,address,i=0; //address表示显存的物理地址 
   unsigned char page=0; unsigned char window=1; //page表示上下两页，window表示左右两页 
   if (layer) page=2; 
   for (x=x0;x<x0+width;x++) 
   {  
//       if (x>60) 
//	   {
//	       window=1;
//		   address=x%61;
//	   } 
//	   else address=x;
       if(x>60)
	   {
	        window=0;
			address=x%61;
	   }
	   else address=x;

	   SetPage(page,page); 
	   SetAddress(address,address); 
	   if(window) PutChar1(bmp[i]); 
	   else PutChar0(bmp[i]);//画上层 

	   SetPage(page+1,page+1); 
	   SetAddress(address,address); 
	   if(window) PutChar1(bmp[i+width]); 
	   else PutChar0(bmp[i+width]);//画下层
	   i++; 
   } 
}
//************************************************************
//函数说明：显示一个字符
//输入参数：x:横坐标 y:纵坐标  ch:字符
//************************************************************
void DisplayChar(unsigned char x,unsigned char y,unsigned char ch)
{    
    DrawBmp(x,y,8,F8X16+(ch-32)*16);
}
//************************************************************
//函数说明：显示一串字符
//输入参数：x:横坐标 y:纵坐标  ch:字符串
//************************************************************
void DisplayStr(unsigned char x,unsigned char y,const unsigned char *ch)
{
    unsigned char i=0;;
	while(*ch!='\0')
	{
	    DisplayChar(x+i,y,*ch++);
		i += 8;
	}
}

void DisplayArray(unsigned char x,unsigned char y,unsigned char *ch,unsigned char Len)
{
   	unsigned char i=0;;

	while(Len--)
	{
	    DisplayChar(x+i,y,*ch++);
		i += 8;
	}
}
/*--------------------------------------------------------------------------------
调用方式：void clrscr(void) 
函数说明：清屏 
---------------------------------------------------------------------------------*/
void clrscr(void) 
{ 
    unsigned char i; 
	unsigned char page;
	
	for(page=0;page<4;page++) 
	{ 
	     SetPage(page,page); 
		 SetAddress(0,0); 
		 for (i=0;i<61;i++)
		 {
		     PutChar0(0);
			 PutChar1(0);
		 }
	} 
}

